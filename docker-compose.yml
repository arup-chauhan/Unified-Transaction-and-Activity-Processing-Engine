version: "3.9"

services:
  # -------------------
  # Core Data Services
  # -------------------
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: unified
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

  # -------------------
  # Microservices
  # -------------------
  ingestion-service:
    build: ./ingestion-service
    container_name: ingestion-service
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${INGESTION_PORT}:8080"

  aggregation-service:
    build: ./aggregation-service
    container_name: aggregation-service
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${AGGREGATION_PORT}:8081"

  query-service:
    build: ./query-service
    container_name: query-service
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${QUERY_PORT}:8082"

  cache-service:
    build: ./cache-service
    container_name: cache-service
    depends_on:
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${CACHE_PORT}:8083"

  activity-service:
    build: ./activity-service
    container_name: activity-service
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${ACTIVITY_PORT}:8084"

  # -------------------
  # Monitoring Stack
  # -------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    command: -config.file=/etc/loki/config/config.yml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config/config.yml
    ports:
      - "${LOKI_PORT}:3100"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./monitoring/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - loki

volumes:
  postgres_data:
  redis_data:
